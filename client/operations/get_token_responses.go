// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/binarycraft007/wecom/models"
)

// GetTokenReader is a Reader for the GetToken structure.
type GetTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetTokenDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetTokenOK creates a GetTokenOK with default headers values
func NewGetTokenOK() *GetTokenOK {
	return &GetTokenOK{}
}

/*
GetTokenOK describes a response with status code 200, with default header values.

get access token response
*/
type GetTokenOK struct {
	Payload *models.GetAccessTokenReponse
}

// IsSuccess returns true when this get token o k response has a 2xx status code
func (o *GetTokenOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get token o k response has a 3xx status code
func (o *GetTokenOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get token o k response has a 4xx status code
func (o *GetTokenOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get token o k response has a 5xx status code
func (o *GetTokenOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get token o k response a status code equal to that given
func (o *GetTokenOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get token o k response
func (o *GetTokenOK) Code() int {
	return 200
}

func (o *GetTokenOK) Error() string {
	return fmt.Sprintf("[GET /gettoken][%d] getTokenOK  %+v", 200, o.Payload)
}

func (o *GetTokenOK) String() string {
	return fmt.Sprintf("[GET /gettoken][%d] getTokenOK  %+v", 200, o.Payload)
}

func (o *GetTokenOK) GetPayload() *models.GetAccessTokenReponse {
	return o.Payload
}

func (o *GetTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetAccessTokenReponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTokenDefault creates a GetTokenDefault with default headers values
func NewGetTokenDefault(code int) *GetTokenDefault {
	return &GetTokenDefault{
		_statusCode: code,
	}
}

/*
GetTokenDefault describes a response with status code -1, with default header values.

unexpected error
*/
type GetTokenDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// IsSuccess returns true when this get token default response has a 2xx status code
func (o *GetTokenDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get token default response has a 3xx status code
func (o *GetTokenDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get token default response has a 4xx status code
func (o *GetTokenDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get token default response has a 5xx status code
func (o *GetTokenDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get token default response a status code equal to that given
func (o *GetTokenDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get token default response
func (o *GetTokenDefault) Code() int {
	return o._statusCode
}

func (o *GetTokenDefault) Error() string {
	return fmt.Sprintf("[GET /gettoken][%d] getToken default  %+v", o._statusCode, o.Payload)
}

func (o *GetTokenDefault) String() string {
	return fmt.Sprintf("[GET /gettoken][%d] getToken default  %+v", o._statusCode, o.Payload)
}

func (o *GetTokenDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *GetTokenDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
