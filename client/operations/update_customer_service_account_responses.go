// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/binarycraft007/wecom/models"
)

// UpdateCustomerServiceAccountReader is a Reader for the UpdateCustomerServiceAccount structure.
type UpdateCustomerServiceAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCustomerServiceAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCustomerServiceAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdateCustomerServiceAccountDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateCustomerServiceAccountOK creates a UpdateCustomerServiceAccountOK with default headers values
func NewUpdateCustomerServiceAccountOK() *UpdateCustomerServiceAccountOK {
	return &UpdateCustomerServiceAccountOK{}
}

/*
UpdateCustomerServiceAccountOK describes a response with status code 200, with default header values.

update customer service account response
*/
type UpdateCustomerServiceAccountOK struct {
	Payload *models.UpdateCustomerServiceAccountReponse
}

// IsSuccess returns true when this update customer service account o k response has a 2xx status code
func (o *UpdateCustomerServiceAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update customer service account o k response has a 3xx status code
func (o *UpdateCustomerServiceAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update customer service account o k response has a 4xx status code
func (o *UpdateCustomerServiceAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update customer service account o k response has a 5xx status code
func (o *UpdateCustomerServiceAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update customer service account o k response a status code equal to that given
func (o *UpdateCustomerServiceAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update customer service account o k response
func (o *UpdateCustomerServiceAccountOK) Code() int {
	return 200
}

func (o *UpdateCustomerServiceAccountOK) Error() string {
	return fmt.Sprintf("[POST /kf/account/update][%d] updateCustomerServiceAccountOK  %+v", 200, o.Payload)
}

func (o *UpdateCustomerServiceAccountOK) String() string {
	return fmt.Sprintf("[POST /kf/account/update][%d] updateCustomerServiceAccountOK  %+v", 200, o.Payload)
}

func (o *UpdateCustomerServiceAccountOK) GetPayload() *models.UpdateCustomerServiceAccountReponse {
	return o.Payload
}

func (o *UpdateCustomerServiceAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdateCustomerServiceAccountReponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomerServiceAccountDefault creates a UpdateCustomerServiceAccountDefault with default headers values
func NewUpdateCustomerServiceAccountDefault(code int) *UpdateCustomerServiceAccountDefault {
	return &UpdateCustomerServiceAccountDefault{
		_statusCode: code,
	}
}

/*
UpdateCustomerServiceAccountDefault describes a response with status code -1, with default header values.

unexpected error
*/
type UpdateCustomerServiceAccountDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// IsSuccess returns true when this update customer service account default response has a 2xx status code
func (o *UpdateCustomerServiceAccountDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update customer service account default response has a 3xx status code
func (o *UpdateCustomerServiceAccountDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update customer service account default response has a 4xx status code
func (o *UpdateCustomerServiceAccountDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update customer service account default response has a 5xx status code
func (o *UpdateCustomerServiceAccountDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update customer service account default response a status code equal to that given
func (o *UpdateCustomerServiceAccountDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update customer service account default response
func (o *UpdateCustomerServiceAccountDefault) Code() int {
	return o._statusCode
}

func (o *UpdateCustomerServiceAccountDefault) Error() string {
	return fmt.Sprintf("[POST /kf/account/update][%d] updateCustomerServiceAccount default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateCustomerServiceAccountDefault) String() string {
	return fmt.Sprintf("[POST /kf/account/update][%d] updateCustomerServiceAccount default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateCustomerServiceAccountDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *UpdateCustomerServiceAccountDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
